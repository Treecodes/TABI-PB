#include <iostream>
#include <iomanip>
#include <cstdlib>

#include "params.h"
#include "molecule.h"
#include "particles.h"
#include "tree.h"
#include "interaction_list.h"
#include "clusters.h"
#include "treecode.h"


int main(int argc, char* argv[])
{
    // set the parameter struct, which is read in from file provided as argv
    if (argc < 2) { std::cout << "No input file set." << std::endl; std::exit(1); }
    struct Params params(argv[1]);
    
    //construct the biomolecule from the provided pqr file
    class Molecule molecule(params);
    
    molecule.copyin_to_device();
    molecule.compute_coulombic_energy();
    molecule.build_xyzr_file();
    
    std::cout << "done with molecule. " << std::endl;
    // build particles from a NanoShaper surface generated by xyzr file
    // then build a tree on the particles, partitioning them
    class Particles particles(molecule, params);
    std::cout << "done with particles. " << std::endl;
    class Tree tree(particles, params);
    std::cout << "done with tree. " << std::endl;
    
    std::cout << "copying particles to device... " << std::endl;
    particles.copyin_to_device();
    std::cout << "computing source term... " << std::endl;
    particles.compute_source_term();
    
    // build clusters and set interpolation points for the tree constructed above
    std::cout << "building clusters... " << std::endl;
    class Clusters clusters(particles, tree, params);
    
    std::cout << "copying clusters to device... " << std::endl;
    clusters.copyin_to_device();
    std::cout << "calculating interp pts... " << std::endl;
    clusters.compute_all_interp_pts();
    
    // build interaction lists from the tree constructed above
    std::cout << "building interaction lists... " << std::endl;
    class InteractionList interaction_list(tree, params);
    
    // initialize the treecode and construct the potential output array
    std::cout << "starting treecode... " << std::endl;
    class Treecode treecode(particles, clusters, 
                            tree, interaction_list, molecule, params);
    
    std::cout << "copy pot to device... " << std::endl;
    treecode.copyin_potential_to_device();
    std::cout << "run gmres... " << std::endl;
    treecode.run_GMRES();
    std::cout << "output... " << std::endl;
    treecode.output();

    return 0;
}
