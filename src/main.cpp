#include <iostream>
#include <iomanip>
#include <cassert>

#include "params.h"
#include "molecule.h"
#include "particles.h"
#include "tree.h"
#include "interaction_list.h"
#include "clusters.h"
#include "treecode.h"


int main(int argc, char* argv[])
{
    // set the parameter struct, which is read in from file provided as argv
    assert(argc == 2 && "Incorrect number of arguments to main");
    struct Params params(argv[1]);
    
    //construct the biomolecule from the provided pqr file
    class Molecule molecule(params);
    
    // output the molecule to an xyzr file for NanoShaper
    molecule.build_xyzr_file();
    
    // build particles from a NanoShaper surface generated by xyzr file
    class Particles particles(molecule, params);
    
    // build a tree on the particles constructed above
    class Tree tree(particles, params);
    
    // build clusters and set interpolation points for the tree constructed above
    class Clusters clusters(particles, tree, params);
    
    // build interaction lists from the tree constructed above
    class InteractionList interaction_list(tree, params);
    
    // initialize the treecode and construct the potential output array
    class Treecode treecode(particles, clusters, tree, interaction_list, params);
    
    // run GMRES on the treecode object
    treecode.run_GMRES();
    
    // output resulting potential
    treecode.output();
    
    std::cout << "Coulombic energy: " << molecule.compute_coulombic_energy() << std::endl;
/*
    if (main_parm->output_datafile[2] == '1') {
        ierr = OutputCSV(main_parm, main_vars, cpu_time);

    char name[256];
    sprintf(name, "tabipb_run");

    ierr = OutputPrint(name, main_vars);

    if (main_parm->output_datafile[0] == '1') {
        ierr = OutputDAT(name, main_vars);
    
    } else if (main_parm->output_datafile[1] == '1') {
        ierr = OutputVTK(name, main_vars);
    }
*/

    return 0;
}
